// Mocks generated by Mockito 5.4.4 from annotations
// in mon_pacing/test/helpers/app_wrapper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:firebase_analytics/firebase_analytics.dart' as _i3;
import 'package:isar/isar.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mon_pacing/models/match_model.dart' as _i7;
import 'package:mon_pacing/repositories/database_repository.dart' as _i4;
import 'package:mon_pacing/services/analytics_service.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIsar_0 extends _i1.SmartFake implements _i2.Isar {
  _FakeIsar_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAnalytics_1 extends _i1.SmartFake
    implements _i3.FirebaseAnalytics {
  _FakeFirebaseAnalytics_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseRepository extends _i1.Mock
    implements _i4.DatabaseRepository {
  @override
  _i5.Future<_i2.Isar> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i5.Future<_i2.Isar>.value(_FakeIsar_0(
          this,
          Invocation.getter(#database),
        )),
        returnValueForMissingStub: _i5.Future<_i2.Isar>.value(_FakeIsar_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i5.Future<_i2.Isar>);
}

/// A class which mocks [AnalyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsService extends _i1.Mock implements _i6.AnalyticsService {
  @override
  _i3.FirebaseAnalytics get analytics => (super.noSuchMethod(
        Invocation.getter(#analytics),
        returnValue: _FakeFirebaseAnalytics_1(
          this,
          Invocation.getter(#analytics),
        ),
        returnValueForMissingStub: _FakeFirebaseAnalytics_1(
          this,
          Invocation.getter(#analytics),
        ),
      ) as _i3.FirebaseAnalytics);

  @override
  _i5.Future<void> logExportToExcel() => (super.noSuchMethod(
        Invocation.method(
          #logExportToExcel,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logStartMatch(_i7.MatchModel? match) => (super.noSuchMethod(
        Invocation.method(
          #logStartMatch,
          [match],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
